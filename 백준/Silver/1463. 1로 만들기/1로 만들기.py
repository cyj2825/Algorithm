# 다시보기
# DP문제, 바텀-업 방식으로 구현
import sys
input = sys.stdin.readline
n = int(input())
# 각 수를 1로 만들기 위한 연산 횟수 최솟값을 저장하는 DP 테이블
dp = [0] * (n+1)
dp[1] = 0

# 2부터 n까지 하나하나 올라가면서 해당 값을 1로 만드는 연산하였을 때 최소 연산 횟수를 DP 테이블에 넣는다
for i in range(2, n+1):
    # 1을 더하는 연산
    dp[i] = dp[i-1] + 1
    # 2를 나누는 연산
    if i % 2 == 0:
        # 1을 더하는 연산과 2를 나누는 연산 중 더 작은 연산 횟수를 갖는 값을 DP 테이블에 넣는다
        dp[i] = min(dp[i], dp[i//2]+1)
    # 3을 나누는 연산
    if i % 3 == 0:
        # 1을 더하는 연산 or 2를 나누는 연산 or 3을 나누는 연산 중 더 작은 연산 횟수를 갖는 값을 DP 테이블에 넣는다
        dp[i] = min(dp[i], dp[i//3]+1)
print(dp[n])