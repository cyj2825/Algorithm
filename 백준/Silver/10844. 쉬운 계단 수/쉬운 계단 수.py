n = int(input())
# 각 자리수에서 맨 뒤에 올 수 있는 숫자의 개수(0~9)를 고려하여 dp 테이블 초기화
# n은 1부터 100까지 가능
# dp[i][j] -> dp의 첫번째 인덱스(i)는 자리수를 의미, dp의 두번째 인덱스(j)는 맨 뒤에 올 수 있는 0~9 숫자를 의미
dp = [[0 for _ in range(10)] for _ in range(101)]

# 자리수가 1일 때, 0~9 모두 한 번씩만 맨 뒤에 올 수 있음
for i in range(1, 10):
    dp[1][i] = 1

# dp 테이블 규칙 : 해당 위치의 대각선 위 두 개의 숫자들의 합
# dp[i][j] = dp[i-1][j-1] + dp[i-1][j+1]
# 0은 왼쪽 위 대각선이 존재하지 않으므로 오른쪽 위 대각선 값이고 9는 오른쪽 위 대각선이 존재하지 않으므로 왼쪽 위 대각선 값
for i in range(2, n+1):
    for j in range(10):
        if j == 0:
            dp[i][j] = dp[i-1][j+1]
        elif j == 9:
            dp[i][j] = dp[i-1][j-1]
        else:
            dp[i][j] = dp[i-1][j-1] + dp[i-1][j+1]
            
print(sum(dp[n]) % 1000000000)